// Generated by CoffeeScript 1.4.0
(function() {
  var Controls, PageController, Trainer,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  PageController = (function() {

    function PageController() {
      var controls, trainer;
      trainer = new Trainer;
      controls = new Controls;
      $(controls).on("started", function(event, words, interval) {
        return trainer.start(words, interval);
      });
      $(controls).on("paused", function() {
        return trainer.pause();
      });
      $(controls).on("resumed", function(event, interval) {
        return trainer.resume(interval);
      });
    }

    return PageController;

  })();

  Controls = (function() {

    function Controls() {
      this.togglePause = __bind(this.togglePause, this);

      this.start = __bind(this.start, this);
      this.el = $("#controls");
      $("#start", this.el).on("click", this.start);
      $("#pause", this.el).on("click", this.togglePause);
    }

    Controls.prototype.start = function() {
      this.isPaused = false;
      $("#pause", this.el).html("Pause");
      return $(this).trigger("started", [this.getWords(), this.getInterval()]);
    };

    Controls.prototype.pause = function() {
      this.isPaused = true;
      $("#pause", this.el).html("Resume");
      return $(this).trigger("paused");
    };

    Controls.prototype.resume = function() {
      this.isPaused = false;
      $("#pause", this.el).html("Pause");
      return $(this).trigger("resumed", [this.getInterval()]);
    };

    Controls.prototype.togglePause = function(event) {
      if (this.isPaused) {
        return this.resume();
      } else {
        return this.pause();
      }
    };

    Controls.prototype.getWords = function() {
      return this.checkWordDelimited(this.checkBackwards($("textarea", this.el).val().split(" ")));
    };

    Controls.prototype.getInterval = function() {
      return 60 / parseInt($("#wpm", this.el).val()) * 1000;
    };

    Controls.prototype.checkBackwards = function(words) {
      if ($("#backwards").hasClass("active")) {
        return words.reverse();
      } else {
        return words;
      }
    };

    Controls.prototype.checkWordDelimited = function(words) {
      var delimitWord;
      delimitWord = $("#worddelimiter").val();
      if ($("#delimit").hasClass("active")) {
        return words.join(" " + delimitWord + " ").split(" ");
      } else {
        return words;
      }
    };

    Controls.prototype.errorCheckText = function(words) {};

    return Controls;

  })();

  Trainer = (function() {

    function Trainer() {
      this.displayNextWord = __bind(this.displayNextWord, this);
      this.el = $("#trainer");
    }

    Trainer.prototype.start = function(words, interval) {
      if (this.interval) {
        clearInterval(this.interval);
      }
      this.currentWordIndex = 0;
      this.words = words;
      return this.interval = setInterval(this.displayNextWord, interval);
    };

    Trainer.prototype.pause = function() {
      return clearInterval(this.interval);
    };

    Trainer.prototype.resume = function(interval) {
      return this.interval = setInterval(this.displayNextWord, interval);
    };

    Trainer.prototype.displayNextWord = function() {
      $("#word", this.el).html(this.words[this.currentWordIndex]);
      return this.currentWordIndex += 1;
    };

    return Trainer;

  })();

  new PageController();

}).call(this);
